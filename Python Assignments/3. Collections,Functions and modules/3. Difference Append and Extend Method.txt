3.  Differentiate between append () and extend () methods?
Ans - 

Let's expand on the differences between append() and extend() with explanations:

append( ) :

The append() method is used to add a single element to the end of a list.
When you use append(), the element you provide is added as a single item at the end of the list, even if it is a list itself. This means that if you append() a list, the entire list becomes a single element in the original list.

extend() :

The extend() method is used to add all the elements from an iterable (like a list, tuple, or string) to the end of the list.
When you use extend(), the iterable you provide is unpacked, and its elements are added individually to the end of the list. This means that each element of the iterable becomes a separate element in the original list.


Example : 
list1 = [1, 2, 3]
list2 = [4, 5, 6]

# Using append()
list1.append(list2)
print(list1)  

Output :  [1, 2, 3, [4, 5, 6]]

# Using extend()

list1.extend(list2)
print(list1)  

Output: [1, 2, 3, 4, 5, 6]
